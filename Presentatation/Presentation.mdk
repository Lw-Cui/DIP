[INCLUDE=presentation]
Title         : Digital Image Processing
Sub Title     : 电子病例的提取
Author        : 崔利伟
Affiliation   : 哈尔滨工业大学
Email         : cui@hellolw.com
Reveal Theme  : solarized
Beamer Theme  : singapore 
Package       : [UTF8]ctex
Locale        : Chinese

[TITLE]

# 病例A
~ Figure { #fig-figure; caption:"Sample1"}
![bl0]

[bl0]: images/bl0.jpg "bl0" { width:auto; max-width:90% }

~

## 病例B
~ Figure { #fig-figure; caption:"Sample"}
![bl1]

[bl1]: images/bl1.jpg "bl1" { width:auto; max-width:90% }
~



## 病例C
~ Figure { #fig-figure; caption:"Sample"}
![bl2]

[bl2]: images/bl2.jpg "bl2" { width:auto; max-width:90% }
~


## 思路 THINKING
- {.fragment}打开图片
- {.fragment}调整图片灰度
- {.fragment}进行高斯模糊
- {.fragment}使用阀值生成蒙板一
- {.fragment}使用中值滤波生成蒙板二
- {.fragment}使用均值算法生成蒙板三
- {.fragment}将两个蒙板作用于原始图片
- {.fragment}查看效果，调整参数

~ Begin Vertical { data-background:Gainsboro }

## 代码展示 CODE SHOW {#vertical}

## First.调整灰度并进行高斯模糊
```java
    CImg<float> src(filename);
    CImg<float> tmp = (src - 100).cut(BLACK, WHITE).blur(2);
```

## Second.阀值算法

Use `columns` to put blocks next to each other:
```java

unsigned char getMaskColor(CImg<float> &p, int x, int y) {
  unsigned sum = 0;
  for (int k = 0; k < p.spectrum(); k++)
    sum += p(x, y, k);
  // if the pixel appears white, then the mask is BLACK
  if (sum > THREADHOLD) return BLACK;
  else return WHITE;
}

```

## Third.中值滤波算法
```java
unsigned char getMaskColor2(CImg<float> &p, int x, int y) {
  vector<int> v;
  for (int i = 0; i < LEN; i++) {
    int sum = 0;
    for (int k = 0; k < p.spectrum(); k++)
      sum += p(x + xp[i], y + y[p], k);
    v.push_back(sum);
  }
  sort(v.begin(), v.end());
  // if the pixel appears black, then the mask is WHITE
  if (v[LEN / 3 * 2] < S_THREADHOLD) return WHITE;
  else if (v[LEN / 3 * 2] < THREADHOLD) return (WHITE + BLACK) / 2;
  else return BLACK;
}


```

## Fourth.均值算法
```java
  unsigned char getMaskColor3(CImg<float> &p, int x, int y) {
  int sum = 0;
  for (int i = 0; i < LEN; i++)
    for (int k = 0; k < p.spectrum(); k++)
      sum += p(x + xp[i], y + y[p], k);
  sum /= (LEN * p.spectrum());
  // if the pixel appears black, then the mask is WHITE
  if (sum < THREADHOLD) return WHITE;
  else return BLACK;
}
```
## Fifth.应用蒙板
```java
  CImg<float> getMask(CImg<float> &p, 
  function<unsigned char(CImg<float> &, int, int)> c) {
  CImg<float> mask(p.width(), p.height(), 1, 1);
  for (int i = 1; i < p.width() - 1; i++)
    for (int j = 1; j < p.height() - 1; j++)
      mask(i, j) = c(p, i, j);
  return mask;
}

```

## Fifth.应用蒙板，对比展示
```java
    CImg<float> mask = getMask(blurImg, getMaskColor),
       mask2 = getMask(blurImg, getMaskColor2),
       mask3 = getMask(blurImg, getMaskColor3);
    (src, blurImg,
       mask.operator+(src).cut(BLACK, WHITE), 
       mask2.operator+(src).cut(BLACK, WHITE),
       mask3.operator+(src).cut(BLACK, WHITE)).display();
  }
```

~ End Vertical

## Thanks for looking :-)


